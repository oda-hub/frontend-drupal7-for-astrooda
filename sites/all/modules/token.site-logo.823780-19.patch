diff --git a/token.tokens.inc b/token.tokens.inc
old mode 100644
new mode 100755
index f584bda..b1f73cc
--- a/token.tokens.inc
+++ b/token.tokens.inc
@@ -358,6 +358,16 @@ function token_token_info() {
     'dynamic' => TRUE,
   );
 
+  // Site tokens.
+  $info['tokens']['site']['logo'] = array(
+    'name' => t('Site logo'),
+    'description' => t('The image showing the site logo.'),
+  );
+  $info['tokens']['site']['logo-url'] = array(
+    'name' => t('Site logo URL'),
+    'description' => t('URL to the image showing the site logo.'),
+  );
+
   return $info;
 }
 
@@ -895,6 +905,34 @@ function token_tokens($type, $tokens, array $data = array(), array $options = ar
     }
   }
 
+  // Site tokens.
+  if ($type == 'site') {
+    foreach ($tokens as $name => $original) {
+      switch ($name) {
+        case 'logo':
+          // Use a logo; but only if we have one to use.
+          $replacements[$original] = '';
+          if ($uri = theme_get_setting('logo')) {
+            $replacements[$original] = theme('image', array('path' => $uri));
+          }
+          break;
+
+        case 'logo-url':
+          $replacements[$original] = '';
+          if ($uri = theme_get_setting('logo')) {
+            $replacements[$original] = $uri;
+          }
+          break;
+      }
+
+      // [site:logo-url:*] chained tokens.
+      if ($url_tokens = token_find_with_prefix($tokens, 'logo-url')) {
+        $uri = theme_get_setting('logo');
+        $replacements += token_generate('url', $url_tokens, array('path' => $uri), $options);
+      }
+    }
+  }
+
   // If $type is a token type, $data[$type] is empty but $data[$entity_type] is
   // not, re-run token replacements.
   if (empty($data[$type]) && ($entity_type = token_get_entity_mapping('token', $type)) && $entity_type != $type && !empty($data[$entity_type]) && empty($options['recursive'])) {
